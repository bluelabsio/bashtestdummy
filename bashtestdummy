#!/bin/bash -e

cd /usr/src/app/tests
LOGDIR=logs

tests=$(find "individual" -name \*.sh -type f | sort)
>&2 echo "Found the following tests:"
>&2 echo "${tests}"

export PATH="/usr/src/app/tests/dummies:/usr/src/app/bin:${PATH:?}"
RUNNUM=$(date +%s)
for test in ${tests}
do
  test_without_extension=${test%.*}
  test_expected_stdout=${test_without_extension}.stdout
  test_expected_stderr=${test_without_extension}.stderr
  #
  # Create some log filenames
  #
  test_simple="${test}"
  # Remove individual/ from start
  test_simple=${test_simple//individual\//}
  # Replace / with _
  test_simple=${test_simple//\//_}
  # Replace .sh at end
  test_simple=${test_simple%.*}
  stdout_log_file="${LOGDIR:?}/${RUNNUM}.${test_simple}.stdout.log"
  stderr_log_file="${LOGDIR:?}/${RUNNUM}.${test_simple}.stderr.log"

  >&2 echo "Running test ${test:?}"
  if ! "${test:?}" > "${stdout_log_file}" 2> "${stderr_log_file:?}"
  then
    >&2 echo "${test:?} FAILED!"
    >&2 echo "Please see ${stdout_log_file:?} and ${stderr_log_file:?} for details"
    >&2 echo
    >&2 echo "STDERR:"
    >&2 cat "${stderr_log_file:?}"
    >&2 echo
    >&2 echo "STDOUT:"
    >&2 cat "${stdout_log_file:?}"
    >&2 echo
    exit 1
  fi
  if ! [ -f "${test_expected_stderr:?}" ]
  then
    echo "Please examine ${stderr_log_file:?} and create expectations for stderr in ${test_expected_stderr:?}"
    exit 1
  fi
  if ! [ -f "${test_expected_stdout:?}" ]
  then
    echo "Please examine ${stdout_log_file:?} and create expectations for stdout in ${test_expected_stdout:?}"
    exit 1
  fi
  if ! diff --brief "${test_expected_stderr:?}" "${stderr_log_file:?}" >/dev/null
  then
    >&2 diff -u "${test_expected_stderr:?}" "${stderr_log_file:?}"
    >&2 echo "Saw unexpected differences in stderr output from expected output in ${test_expected_stderr:?}"
    exit 1
  fi
  if ! diff --brief "${test_expected_stdout:?}" "${stdout_log_file:?}" >/dev/null
  then
    >&2 diff -u "${test_expected_stdout:?}" "${stdout_log_file:?}"
    >&2 echo "Saw unexpected differences in stdout output from expected output in ${test_expected_stdout:?}"
    exit 1
  fi
  echo "${test:?} PASSED!"
done

echo "PASS"
echo "Please see logs in ${LOGDIR:?}"
echo "Sleeping to flush out logs via ptty..."
sleep 2
echo "Done!"
